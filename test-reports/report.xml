<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="10" skipped="0" tests="49" time="206.133" timestamp="2024-10-22T13:07:30.947507+01:00" hostname="mcrowther-Blade-Pro-17-Early-2021-RZ09-0368"><testcase classname="tests.test_adapters.test_adapter_array.TestAdapterArray" name="test_details" time="0.001"><failure message="NameError: name 'mock_mqtt_client' is not defined">self = &lt;tests.test_adapters.test_adapter_array.TestAdapterArray testMethod=test_details&gt;

    def setUp(self):
        watch_file1 = os.path.join("tmp.txt")
        watch_file2 = os.path.join("tmp1.txt")
        if os.path.isfile(watch_file1):
            os.remove(watch_file1)
        if os.path.isfile(watch_file2):
            os.remove(watch_file2)
    
&gt;       self.mock_client = mock_mqtt_client.MockBioreactorClient(broker, port,username=un,password=pw)
E       NameError: name 'mock_mqtt_client' is not defined

tests/test_adapters/test_adapter_array.py:76: NameError</failure></testcase><testcase classname="tests.test_adapters.test_adapter_array.TestAdapterArray" name="test_logic" time="0.000"><failure message="NameError: name 'mock_mqtt_client' is not defined">self = &lt;tests.test_adapters.test_adapter_array.TestAdapterArray testMethod=test_logic&gt;

    def setUp(self):
        watch_file1 = os.path.join("tmp.txt")
        watch_file2 = os.path.join("tmp1.txt")
        if os.path.isfile(watch_file1):
            os.remove(watch_file1)
        if os.path.isfile(watch_file2):
            os.remove(watch_file2)
    
&gt;       self.mock_client = mock_mqtt_client.MockBioreactorClient(broker, port,username=un,password=pw)
E       NameError: name 'mock_mqtt_client' is not defined

tests/test_adapters/test_adapter_array.py:76: NameError</failure></testcase><testcase classname="tests.test_adapters.test_adapter_array.TestAdapterArray" name="test_running" time="0.000"><failure message="NameError: name 'mock_mqtt_client' is not defined">self = &lt;tests.test_adapters.test_adapter_array.TestAdapterArray testMethod=test_running&gt;

    def setUp(self):
        watch_file1 = os.path.join("tmp.txt")
        watch_file2 = os.path.join("tmp1.txt")
        if os.path.isfile(watch_file1):
            os.remove(watch_file1)
        if os.path.isfile(watch_file2):
            os.remove(watch_file2)
    
&gt;       self.mock_client = mock_mqtt_client.MockBioreactorClient(broker, port,username=un,password=pw)
E       NameError: name 'mock_mqtt_client' is not defined

tests/test_adapters/test_adapter_array.py:76: NameError</failure></testcase><testcase classname="tests.test_adapters.test_adapter_array.TestAdapterArray" name="test_start" time="0.001"><failure message="NameError: name 'mock_mqtt_client' is not defined">self = &lt;tests.test_adapters.test_adapter_array.TestAdapterArray testMethod=test_start&gt;

    def setUp(self):
        watch_file1 = os.path.join("tmp.txt")
        watch_file2 = os.path.join("tmp1.txt")
        if os.path.isfile(watch_file1):
            os.remove(watch_file1)
        if os.path.isfile(watch_file2):
            os.remove(watch_file2)
    
&gt;       self.mock_client = mock_mqtt_client.MockBioreactorClient(broker, port,username=un,password=pw)
E       NameError: name 'mock_mqtt_client' is not defined

tests/test_adapters/test_adapter_array.py:76: NameError</failure></testcase><testcase classname="tests.test_adapters.test_adapter_array.TestAdapterArray" name="test_stop" time="0.001"><failure message="NameError: name 'mock_mqtt_client' is not defined">self = &lt;tests.test_adapters.test_adapter_array.TestAdapterArray testMethod=test_stop&gt;

    def setUp(self):
        watch_file1 = os.path.join("tmp.txt")
        watch_file2 = os.path.join("tmp1.txt")
        if os.path.isfile(watch_file1):
            os.remove(watch_file1)
        if os.path.isfile(watch_file2):
            os.remove(watch_file2)
    
&gt;       self.mock_client = mock_mqtt_client.MockBioreactorClient(broker, port,username=un,password=pw)
E       NameError: name 'mock_mqtt_client' is not defined

tests/test_adapters/test_adapter_array.py:76: NameError</failure></testcase><testcase classname="tests.test_adapters.test_biolector_adapter.TestBiolector1Interpreter" name="test_measurement" time="0.002" /><testcase classname="tests.test_adapters.test_biolector_adapter.TestBiolector1Interpreter" name="test_metadata" time="0.000" /><testcase classname="tests.test_adapters.test_biolector_adapter.TestBiolector1" name="test_details" time="3.092" /><testcase classname="tests.test_adapters.test_biolector_adapter.TestBiolector1" name="test_running" time="6.088" /><testcase classname="tests.test_adapters.test_biolector_adapter.TestBiolector1" name="test_start" time="6.091" /><testcase classname="tests.test_adapters.test_biolector_adapter.TestBiolector1" name="test_stop" time="6.092" /><testcase classname="tests.test_adapters.test_biolector_adapter.TestBiolector1" name="test_update" time="9.124" /><testcase classname="tests.test_adapters.test_equipment_adapter.TestBioreactor" name="test_details" time="6.079" /><testcase classname="tests.test_adapters.test_equipment_adapter.TestBioreactor" name="test_start" time="12.113" /><testcase classname="tests.test_adapters.test_equipment_adapter.TestBioreactor" name="test_stop" time="14.124" /><testcase classname="tests.test_adapters.test_equipment_adapter.TestBioreactor" name="test_update" time="18.156" /><testcase classname="tests.test_adapters.test_table_simulator.TestTableSimulatorInterpreter" name="test_measurement" time="1.038" /><testcase classname="tests.test_adapters.test_table_simulator.TestTableSimulatorInterpreter" name="test_metadata" time="0.033" /><testcase classname="tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter" name="test_details" time="6.070" /><testcase classname="tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter" name="test_logic" time="8.065"><failure message="AssertionError: False is not true">self = &lt;tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter testMethod=test_logic&gt;

    def test_logic(self) -&gt; None:
        logger.debug("Testing logic")
        self._flush_topics()
        self.mock_client.reset_messages()
    
        mthread = Thread(target=self._adapter.start)
        mthread.start()
        time.sleep(2)
        self.assertTrue(len(self.mock_client.messages.keys()) == 1)
        self.assertIn(self.details_topic, self.mock_client.messages)
        time.sleep(2)
        # _create_file()
&gt;       self.assertTrue(len(self.mock_client.messages.keys()) == 3)
E       AssertionError: False is not true

tests/test_adapters/test_table_simulator.py:421: AssertionError</failure></testcase><testcase classname="tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter" name="test_running" time="8.076"><failure message="AssertionError: 'test_ins/table_simulator/test_IndPenSimAdapter/running' not found in {'test_ins/table_simulator/test_IndPenSimAdapter/details': [{'instance_id': 'test_IndPenSimAdapter', 'institute': 'test_ins', 'class': 'TableSimulatorAdapter', 'equipment_id': 'table_simulator', 'version': '1.0', 'manufacturer': 'General Table Simulator', 'device_type': 'Table simulator', 'application': 'Table simulator'}]}">self = &lt;tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter testMethod=test_running&gt;

    def test_running(self) -&gt; None:
        logger.debug("Testing running")
        self._flush_topics()
        self.mock_client.reset_messages()
    
        mthread = Thread(target=self._adapter.start)
        mthread.start()
        # time.sleep(2)
        # _create_file()
        time.sleep(2)
        _delete_watch_file()
        time.sleep(2)
        self._adapter.stop()
        mthread.join()
    
&gt;       self.assertIn(self.running_topic, self.mock_client.messages)
E       AssertionError: 'test_ins/table_simulator/test_IndPenSimAdapter/running' not found in {'test_ins/table_simulator/test_IndPenSimAdapter/details': [{'instance_id': 'test_IndPenSimAdapter', 'institute': 'test_ins', 'class': 'TableSimulatorAdapter', 'equipment_id': 'table_simulator', 'version': '1.0', 'manufacturer': 'General Table Simulator', 'device_type': 'Table simulator', 'application': 'Table simulator'}]}

tests/test_adapters/test_table_simulator.py:359: AssertionError</failure></testcase><testcase classname="tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter" name="test_start" time="9.080"><failure message="AssertionError: 'test_ins/table_simulator/test_IndPenSimAdapter/experiment/start' not found in {'test_ins/table_simulator/test_IndPenSimAdapter/details': [{'instance_id': 'test_IndPenSimAdapter', 'institute': 'test_ins', 'class': 'TableSimulatorAdapter', 'equipment_id': 'table_simulator', 'version': '1.0', 'manufacturer': 'General Table Simulator', 'device_type': 'Table simulator', 'application': 'Table simulator'}]}">self = &lt;tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter testMethod=test_start&gt;

    def test_start(self) -&gt; None:
        logger.debug("Testing start")
        self._flush_topics()
        # Making sure we start from a clean slate
        _delete_watch_file()
        self.mock_client.reset_messages()
        mthread = Thread(target=self._adapter.start)
        mthread.start()
        time.sleep(2)
        # _create_file()
        time.sleep(2)
        self._adapter.stop()
        mthread.join()
        time.sleep(1)
    
&gt;       self.assertIn(self.start_topic, self.mock_client.messages)
E       AssertionError: 'test_ins/table_simulator/test_IndPenSimAdapter/experiment/start' not found in {'test_ins/table_simulator/test_IndPenSimAdapter/details': [{'instance_id': 'test_IndPenSimAdapter', 'institute': 'test_ins', 'class': 'TableSimulatorAdapter', 'equipment_id': 'table_simulator', 'version': '1.0', 'manufacturer': 'General Table Simulator', 'device_type': 'Table simulator', 'application': 'Table simulator'}]}

tests/test_adapters/test_table_simulator.py:295: AssertionError</failure></testcase><testcase classname="tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter" name="test_stop" time="8.070"><failure message="AssertionError: 'test_ins/table_simulator/test_IndPenSimAdapter/experiment/stop' not found in {}">self = &lt;tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter testMethod=test_stop&gt;

    def test_stop(self) -&gt; None:
        logger.debug("Testing stop")
        self._flush_topics()
        self.mock_client.reset_messages()
    
        mthread = Thread(target=self._adapter.start)
        mthread.start()
        # time.sleep(2)
        # _create_file()
        time.sleep(2)
        self.mock_client.reset_messages()
        _delete_watch_file()
        time.sleep(2)
        self._adapter.stop()
        mthread.join()
&gt;       self.assertIn(self.stop_topic, self.mock_client.messages)
E       AssertionError: 'test_ins/table_simulator/test_IndPenSimAdapter/experiment/stop' not found in {}

tests/test_adapters/test_table_simulator.py:328: AssertionError</failure></testcase><testcase classname="tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter" name="test_update" time="4.075"><failure message="TypeError: write() argument must be str, not bytes">self = &lt;tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter testMethod=test_update&gt;

    def test_update(self) -&gt; None:
        logger.debug("Testing update")
        self._flush_topics()
        self.mock_client.reset_messages()
        exp_tp = self._adapter._metadata_manager.experiment.measurement()
        self.mock_client.subscribe(exp_tp)
        mthread = Thread(target=self._adapter.start)
        mthread.start()
        # Loop through the measurements and write them to the file
&gt;       self._get_measurements_run()

tests/test_adapters/test_table_simulator.py:372: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;tests.test_adapters.test_table_simulator.TestTableSimulatorAdapter testMethod=test_update&gt;

    def _get_measurements_run(self) -&gt; None:
        logger.debug("Getting measurements")
        with smart_open(measurement_file) as file:
            data = file.readlines()
            with open(watch_file, "w") as f:
                for line in data:
&gt;                   f.write(line)
E                   TypeError: write() argument must be str, not bytes

tests/test_adapters/test_table_simulator.py:249: TypeError</failure></testcase><testcase classname="tests.test_adapters.test_table_simulator_simple.TestSimple" name="test_simple_table_simulator2" time="1.132" /><testcase classname="tests.test_measurement_manager.TestMeasurementManager" name="test_all_measurement" time="0.000" /><testcase classname="tests.test_measurement_manager.TestMeasurementManager" name="test_map_classes" time="0.000" /><testcase classname="tests.test_modules.test_base_modules.TestEventWatcherModule" name="test_functions" time="0.002" /><testcase classname="tests.test_modules.test_base_modules.TestOutputModule" name="test_functions" time="0.001" /><testcase classname="tests.test_modules.test_base_modules.TestMeasurementModule" name="test_functions" time="0.001" /><testcase classname="tests.test_modules.test_base_modules.TestPhaseModule" name="test_functions" time="0.002" /><testcase classname="tests.test_modules.test_base_modules.TestProcessModule" name="test_functions" time="0.002" /><testcase classname="tests.test_modules.test_input_modules.test_file_watch_modules.TestFileWatcher" name="test_file_watcher_change" time="7.013" /><testcase classname="tests.test_modules.test_input_modules.test_file_watch_modules.TestFileWatcher" name="test_file_watcher_creation" time="7.013" /><testcase classname="tests.test_modules.test_input_modules.test_file_watch_modules.TestFileWatcher" name="test_file_watcher_deletion" time="13.020" /><testcase classname="tests.test_modules.test_output_modules.test_fallback.TestMQTT" name="test_fallback_file" time="4.057" /><testcase classname="tests.test_modules.test_output_modules.test_fallback.TestMQTT" name="test_fallback_keydb" time="5.053" /><testcase classname="tests.test_modules.test_output_modules.test_file.TestFILEOutputModule" name="test_transmit_adds_new_topic" time="0.003" /><testcase classname="tests.test_modules.test_output_modules.test_file.TestFILEOutputModule" name="test_transmit_appends_data_to_existing_topic" time="0.003" /><testcase classname="tests.test_modules.test_output_modules.test_file.TestFILEOutputModule" name="test_transmit_converts_existing_non_list_to_list" time="0.002" /><testcase classname="tests.test_modules.test_output_modules.test_file.TestFILEOutputModule" name="test_transmit_creates_file_with_new_topic" time="0.002" /><testcase classname="tests.test_modules.test_output_modules.test_keydb.TestKeyDB" name="test_delete" time="0.002" /><testcase classname="tests.test_modules.test_output_modules.test_keydb.TestKeyDB" name="test_flushdb" time="0.002" /><testcase classname="tests.test_modules.test_output_modules.test_keydb.TestKeyDB" name="test_set_and_get" time="0.001" /><testcase classname="tests.test_modules.test_output_modules.test_mqtt_output.TestMQTT" name="test_transmit" time="4.061" /><testcase classname="tests.test_modules.test_phase_modules.test_phase_module.TestMeasurePhase" name="test_measure_phase" time="8.071" /><testcase classname="tests.test_modules.test_phase_modules.test_phase_module.TestControlPhase" name="test_control_phase" time="6.073" /><testcase classname="tests.test_modules.test_process_modules.test_process_module.TestContinousProcess" name="test_continous_process" time="10.071" /><testcase classname="tests.test_modules.test_process_modules.test_process_module.TestDiscreteProcess" name="test_discrete_process" time="14.080" /></testsuite></testsuites>