services:
  vernemq:
    image: vernemq/vernemq
    container_name: vernemq
    environment:
      - DOCKER_VERNEMQ_ACCEPT_EULA=yes
      - DOCKER_VERNEMQ_ALLOW_ANONYMOUS=off  # Set to 'off' for enhanced security
      - DOCKER_VERNEMQ_USER_${VERNEMQ_USER}=${VERNEMQ_PASSWORD}
    ports:
      - "1883:1883"  # MQTT default port
      - "8888:8888"  # MQTT over WebSockets
    volumes:
      - ./vernemq_data:/vernemq/data
      - ./vernemq_logs:/vernemq/log
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 1883 && echo 'OK' || echo 'NOK'"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  nodered:
    image: nodered/node-red
    container_name: nodered
    ports:
      - "1880:1880"  # Node-RED web interface
    environment:
      - NODE_OPTIONS=--max_old_space_size=256
      - NODE_RED_ENABLE_PROJECTS=true
      - MQTT_USER=${VERNEMQ_USER}
      - MQTT_PASSWORD=${VERNEMQ_PASSWORD}
    volumes:
      - ./nodered_data:/data
    depends_on:
      vernemq:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:1880 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  timescaledb:
    image: timescale/timescaledb:latest-pg17
    container_name: timescaledb
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    volumes:
      - ./timescaledb_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # PostgreSQL default port
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    environment:
      - HOST_PROC=/proc
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - MQTT_USER=${VERNEMQ_USER}
      - MQTT_PASSWORD=${VERNEMQ_PASSWORD}
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      timescaledb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "telegraf --test --config /etc/telegraf/telegraf.conf || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"  # pgAdmin web interface
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    depends_on:
      timescaledb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/pgadmin4/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"  # Grafana web interface
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./grafana_plugins:/var/lib/grafana/plugins
    depends_on:
      timescaledb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always